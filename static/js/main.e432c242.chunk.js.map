{"version":3,"sources":["api/tree.js","components/SearchBar.js","components/Spinner.js","components/TreeInfo.js","components/App.js","index.js"],"names":["axios","create","baseURL","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","Spinner","message","defaultProps","TreeInfo","Fragment","style","display","isLoading","maxWidth","width","src","result","image_url","alt","name","onLoad","imageLoaded","alignItems","flexDirection","background","padding","color","renderContent","textAlign","description","App","onSearchSubmit","a","tree","post","response","data","Object","keys","length","marginTop","renderTree","ReactDOM","render","document","querySelector"],"mappings":"yOAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,gDCyBIC,E,4MAzBbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGvB,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACE,sBAAKA,UAAU,QAAf,UACE,qDACA,uBACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,sB,GAjBtCK,IAAMC,WCAxBC,EAAU,SAACZ,GACf,OACE,qBAAKE,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,SAAqCF,EAAMa,aAKjDD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCkCAG,E,8KA1CX,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKC,MAAO,CAAEC,QAASf,KAAKH,MAAMmB,UAAY,QAAU,QAAxD,SACE,cAAC,EAAD,MAGF,qBACEF,MAAO,CACLC,QAASf,KAAKH,MAAMmB,UAAY,OAAS,QACzCC,SAAU,SAEZC,MAAM,OACNC,IAAKnB,KAAKH,MAAMuB,OAAOC,UACvBC,IAAKtB,KAAKH,MAAMuB,OAAOG,KACvBC,OAAQxB,KAAKH,MAAM4B,mB,+BAOzB,OACE,sBACEX,MAAO,CACLC,QAAS,OACTW,WAAY,SACZC,cAAe,SACfC,WAAY,2BACZC,QAAS,MACTC,MAAO,WAPX,UAUE,6BAAK9B,KAAKH,MAAMuB,OAAOG,OACtBvB,KAAK+B,gBACN,mBAAGjB,MAAO,CAAEe,QAAS,SAAUG,UAAW,UAA1C,SACGhC,KAAKH,MAAMuB,OAAOa,qB,GArCN1B,IAAMC,WCqCd0B,E,4MAlCb1C,MAAQ,CAAE4B,OAAQ,GAAIJ,WAAW,G,EAEjCmB,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEACQC,EAAKC,KAAK,oBAAqB,CAAEf,KAAM9B,IAD/C,OACT8C,EADS,OAGf,EAAKlC,SAAS,CAAEe,OAAQmB,EAASC,KAAKpB,OAAQJ,WAAW,IAH1C,2C,wDAMjBS,YAAc,WACZ,EAAKpB,SAAS,CAAEW,WAAW,K,2DAI3B,GAA8C,IAA1CyB,OAAOC,KAAK1C,KAAKR,MAAM4B,QAAQuB,OACjC,OACE,cAAC,EAAD,CACEvB,OAAQpB,KAAKR,MAAM4B,OACnBJ,UAAWhB,KAAKR,MAAMwB,UACtBS,YAAazB,KAAKyB,gB,+BAOxB,OACE,sBAAK1B,UAAU,eAAee,MAAO,CAAE8B,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW9C,SAAUE,KAAKmC,iBACzBnC,KAAK6C,oB,GA7BItC,IAAMC,WCFxBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.e432c242.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://lovely-asa-tree.herokuapp.com/api/v1\",\n});\n","import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Which Tree Am I?</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={(e) => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  message: \"Loading...\",\n};\n\nexport default Spinner;\n","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport Spinner from \"./Spinner\";\n\nclass TreeInfo extends React.Component {\n  renderContent() {\n    return (\n      <React.Fragment>\n        <div style={{ display: this.props.isLoading ? \"block\" : \"none\" }}>\n          <Spinner />\n        </div>\n\n        <img\n          style={{\n            display: this.props.isLoading ? \"none\" : \"block\",\n            maxWidth: \"500px\",\n          }}\n          width=\"100%\"\n          src={this.props.result.image_url}\n          alt={this.props.result.name}\n          onLoad={this.props.imageLoaded}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          background: \"rgba(115, 102, 217, 0.7)\",\n          padding: \"5px\",\n          color: \"#efefef\",\n        }}\n      >\n        <h2>{this.props.result.name}</h2>\n        {this.renderContent()}\n        <p style={{ padding: \"10px 0\", textAlign: \"center\" }}>\n          {this.props.result.description}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default TreeInfo;\n","import { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport tree from \"../api/tree\";\nimport SearchBar from \"./SearchBar\";\nimport TreeInfo from \"./TreeInfo\";\n\nclass App extends React.Component {\n  state = { result: {}, isLoading: true };\n\n  onSearchSubmit = async (term) => {\n    const response = await tree.post(\"/trees/which-am-i\", { name: term });\n\n    this.setState({ result: response.data.result, isLoading: true });\n  };\n\n  imageLoaded = () => {\n    this.setState({ isLoading: false });\n  };\n\n  renderTree() {\n    if (Object.keys(this.state.result).length !== 0) {\n      return (\n        <TreeInfo\n          result={this.state.result}\n          isLoading={this.state.isLoading}\n          imageLoaded={this.imageLoaded}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        {this.renderTree()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}